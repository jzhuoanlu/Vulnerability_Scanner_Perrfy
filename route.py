from flask import (
    Flask, 
    request,
    render_template)
import SqlScanner

# Create Flask's `app` object
app = Flask(__name__)

@app.route("/", methods=["GET"])
def form():
    """
    Landing page. Simply take in an URL and quality value and ships to the download page
    """
    return render_template(
        'form.html'
    )


@app.route('/analysis', methods = ['POST', 'GET'])
def analysis():
    """
    Receive a URL from the landing page. Then scrape the website for its images, compress them, and display them. 
    I didn't worry about anything else.
    """

    if request.method == 'GET':
        return f"The URL /download was accessed directly. Try going to '/' to submit the URL first."

    if request.method == 'POST':
        # get the URL submited
        form_data = request.form
        url = form_data["URL"]

        # scan the submitted url for a sql injection vulnerability
        result = SqlScanner.scan_sql_injection(url)

        # crawl the other urls and scan for other sql injection vulnerabilities
        links_info = SqlScanner.crawl_scan(url)
        return render_template('analysis.html', 
        form_data = form_data,
        urls = links_info,
        result = result)

# quickly just run the app to start up the app. Not too much thought put into it.
app.run(host="0.0.0.0", debug=False)